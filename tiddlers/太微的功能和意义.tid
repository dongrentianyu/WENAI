created: 20220723220438908
creator: 马不前
difficulty: 4.943115476300201
due: 20221201114011851
grade: 1
history: [{"due":"20220924043942463","interval":0,"difficulty":5,"stability":2,"retrievability":1,"grade":-1,"lapses":0,"reps":1,"review":"20220922043942463"},{"due":"20221013064714091","interval":7,"difficulty":4.8915901242788244,"stability":14.421632209922258,"retrievability":0.6915901242788246,"grade":1,"lapses":0,"reps":2,"review":"20220929064714091"}]
interval: 22
lapses: 0
modified: 20230124182448664
modifier: 马不前
reps: 3
retrievability: 0.8515253520213766
review: 20221021114011851
stability: 40.95878086979501
tags: 探索太微后的想法与思考
title: 太微的功能和意义
tmap.id: 30ec425a-fd64-4018-831b-8540cf8b3811
type: text/vnd.tiddlywiki

  按照我对学习的理解，重新认识太微。

 首先要明确的是，太微是笔记软件，加上钓鱼插件之后当然也可以算作是记忆软件。但主要还是笔记软件保存笔记的方式。

从这一点出发，按照我的理解，就是阅读这部分不在太微这边处理。换言之，太微不是阅读软件。

 不管是阅读纸质书也好，阅读电子书也好，阅读杂志或者图书馆的藏书都行，阅读永远是第一步的。我目前采用的是微信读书和bookxnote（电脑端）这两个软件，都是可以写批注和导出批注的。

阅读过程中会产生一些笔记，一般而言不会太多。如果是精读，笔记可能会很多。但不管多少，第一遍阅读之后的笔记往往是粗浅，不够细致的。

然后把笔记（其中包括摘录的正文和批注）导入到super memo上面去，作进一步精细化的处理。这个处理流程主要是重新梳理整本书的框架，论述逻辑，以及填充辅助材料，最后将每一个知识点拆分成最小信息点，对最小信息点处理。为什么在super memo上面处理，而不是在太微这边处理呢？一个原因是体量太大，一个想法是两边保存会更好。主要我是想把笔记软件和记忆软件区分开来。

然后再把每一本书中处理完毕之后的笔记卡片迁移到太微这边来。太微负责处理的是不同书籍之间的笔记，而super memo扶着处理的是单本书籍或者单篇文章之间的内容。这是我认为两者最大的不同。迁移到了太微这边，又是一顿操作处理，起码要做好层级相关，以及对每本书的标签命名。

（我忽然想问自己为什么如此执着于书籍的层级联系。因为在super memo中可以把层级做到极致，就是任何一本书第几页第几句话，内涵是什么，如果是公式，可以在下面举例或者试题来辅助理解。而在太微中，就是要打破信息之间的人为联系，这是一个非线性的，甚至都不是网状的，随意流动的笔记库，任何一个信息点，都可能帮助激起思考。太微真正的使命不是高级记事本，也不是对书籍内容的整理，而是尽可能还原成信息可以组合的样子，没有时间和文本的约束，从任何一个条目开始创造，从故事河里的任何一条鱼儿开始孕育大海。

过去写文章也好，写论文也好，总是要能够说明出处是最好的，这样才知道那些是引用的，那些是作者创造的。但真正的思想家反而并不局限于此。比如马克思就是一个例子，他往往是用他的语言去引用以往哲学家的思想，再对其进行批判。其实没必要给自己设置心理负担，比如某一个理论，某一个案例，十年后谁还记得是出自那本书，那一章节的，都是知道内容和引用内容的途径就可以了。当然一些特殊领域另说。）

不同书本之间的卡片会有着各种各样的联系，这些联系未必是直接相关的，可能只是类比，但完全可以建立起各种各样的想法，特别是在专注于多个不同的观点的时候，可以看到更深层次内容。然后把这些想法重新整理成卡片笔记。当然这些笔记也不会石沉大海，因为有钓鱼插件。

最后当要写文章或者读书报告的时候，就是要筛选出相关条目，进行删减和修改，重新整理逻辑。这一步可以在notion中完成也可以直接在太微里完成，都一样。

两个额外的问题。

第一，书籍的信息如何处理？比如出版信息，分类信息以及购买信息？这些我是在notion里完成的，以后打开很慢的话，可能就会改用excel来实现，因为都是数据库。在太微里也可以实现，不过一来需要做很多重复工作。具体来说，就是可以借助模板，把出版信息的十个属性做成一个模板，然后调用这个模板，再填写信息。这样确实方便不少，但有些内容比如分类信息里面，国家和时代，这样重复的内容可能就需要手动输入了。有些繁琐，但勉强可以接受。二来就是担心不知道能不能够筛选文本中的内容，比如某一个条目里的子条目的文本内容，然后再把这些都呈现出来。具体来说就是能够显示我上半年看了几本小说，中国的多少，英国的几本？（这个功能是可以实现的，但估计需要自己写，对我这种编程小白就很不友好了，前期还是选择notion的数据库或者最直接的excle）

第二个问题，就是在太微里写作的问题。比如我现在写了一大段文字，是不是要把这些文字拆开来，拆成很多个子条目？还一个就是如何对标签进行管理。因为一本书可能会有十个章节，每一个章节里面三个小节，再加上经过super memo更多的信息叠加，导致如果是用标签作为层级叠加的话，那么可能会出现只有少部分笔记会是多个标签，大部分只有单一的标签。虽然这样也没什么问题。这些还是后面实践了才考虑吧。

其他的问题，如果是简单的学术书，可以按照super memo处理后，如果是额外的笔记，那么可以先在太微里保存。


!!太微的作用

运用太微不只是自动编辑整理笔记那么简单，之前也提到过太微的非线性依赖标题和标签两个内容的重叠，才能做到既是线性的，又是非线性的。

到了后期，这些笔记就会出现相互排斥的现象。比如这一篇笔记是关于中国古代文学的，那一篇也是关于中国古代文学的。一旦笔记的数量呈指数爆炸增加就必须要考虑笔记与笔记之间的联系。重新整合新的笔记。

太微能够实现的功能

笔记软件的两个作用，一个就是用来保存你的笔记。另一个就是用来展示你的笔记。

*自动化展示笔记
*创建笔记与笔记之间的联系
**帮助持续研究某一事物（详见卡片笔记法）
*修改笔记，不断增进理解
**达到对复杂事物的深刻认识
**并且能够把这种复杂认识引入到其他领域
**最后形成自己的思维模型

题外话，当时入门太微很大程度上是看了一篇文章说可以实现卢曼的卡片笔记法，才慢慢开始学习的。

太微的功能上面已经讲了，现在的想法是如何把代码和实际的操作结合起来。比如我刚才在学习定义宏的内容。那么第一步，我们可以通过讲述一个代码可以实现某一个目标。比如刚才的例子就是实现把标签显示出来，然后再讲述定义的过程，然后引出宏的概念，最后我们再回到宏的构建中去。

大部分人不能够很好地接受太微是没有看到太微是如何直接解决掉他们的需求的。这不是饥饿营销，先创造需求然后再满足你，而是实实在在的需求。我觉得只要说清楚这些需求和怎么实现的，那肯定会喜欢上太微的。

太微的作用在于借助不同文本与文本之间的创造新的文本