created: 20220726051436992
creator: 马不前
modified: 20220922043913298
modifier: 马不前
tags: 太微中阶用法指南
title: 太微中级用法引言
tmap.id: 03863f17-2896-46ce-a0f9-3e3503dc8c40
type: text/vnd.tiddlywiki

我打算写一篇中级的太微用法指南。首先，目前有了很多入门太微的文章，比如林一二的，比如基础中文教程文档，比如xp的入门。最近还有一篇更简单的入门手册。但我以为这些还不够。我推荐太微给其他人，别人会觉得学编程很难，为了一个笔记软件专门去学编程似乎没有必要。以后还会用到编程这些知识吗？

我心中的回答是肯定用得上。但我担忧以后长时间不写编程代码，是不是也会遗忘，以至于要重新学过。英语就是一个很好的例子，很多人参加了工作之后，英语基本上就没有用处了。

太微的初级用法很简单，以桌面端太记为例，只需要下载安装好，然后调配一些简单的设置，装一些没有安装的插件，接着就可以开始写了。这一步勉强需要一点类似于markdown的语法知识，但不会完全没关系，可以在写完笔记后手动调整一下，也不是很难的事情。但这样貌似还不能表现出太微的强大。

初级阶段我以为三天之内是肯定可以上手的。起码打开页面不会慌乱了。后面就是太微的中级用法了。初级和中级的区别在哪里？第一个是基础的编程知识，html和css。html对应着内容，css对应着样式。第二个就是筛选器的用法。筛选器的用法是必须要掌握的，没有筛选器，太微就是零散的一团沙子，和普通的纸质笔记没有区别。第三个就是在学会了这些之后，重新搭建更多实用的内容。比如我一直想知道xp教程里有一个bookshlf是怎么实现的。以及很多想要的内容是怎么实现的。高级的就要用到更多的编程知识了，这些只能是交给大佬们完成了。

目前通行的教程里对筛选器用法介绍较多，html和css只是辅助介绍了一点，最后那个基本上是完全丢给个人去琢磨了。对于目前的使用者来说没什么问题，不会可以在群里问。但是要把太微推向给每一个人的话，那么就非得详细介绍不可。我个人不是特别想用那种跳转链接的方式跳转到其他网站上去。学习html和css有很多网站可以实现，比如菜鸟教程和mdn，w3c。但既然别人那里可以实现，为什么不能在太微这边讲述一遍呢？我觉得是可以，且需要的。你不能让太微的使用者都是吃百家饭长大的，今天在这里学一点，明天在那里学一点。虽然这种搜索信息的能力对当前的学习者来说是很重要的。但是我以为没必要切换到其他网站上去。当然也不是绝对排斥其他网站，可以把链接放在下面。供有需要的人去查询，也是可以的。比如我就是看了B站康文昌的编程视频才开始学习html和css的，这也是可以的。这些知识其实也要让使用者掌握，甚至是更为基础的知识。然而大部分人还没有掌握就被各种劝退了。

html和css好说歹说一个星期是能够学会的，如果时间不是很充足，两个星期是一定可以学会的。如果这点时间都不能够保证的话，那么当前的环境就不适合入门太微，建议换一个时间充裕的时期学习。筛选器的用法也在教程的解释中学到了一点皮毛。但更多的内容还在后面。

太微可以实现很多功能，很多操作。但这些操作都是代码来完成的。这里首先是插件。然而很多人就倒在了插件面前。（不过我以为在经受了前面的教导后，大部分人应该能体会到太微的魅力而不至于轻易放弃了）对于插件，有两个阻碍。一个是语言上的，很多插件都是英文，看半天看不懂。我也借助翻译软件理解。接着就出现了第二个障碍，不懂编程的知识。比如kin filter，我觉得这也是一个很好的插件，但我对着教程看了好几遍，楞是没学会。其中还有一些是可以让使用者发挥创造的地方。但完全不知道该怎么去创造。或者说我想要这个模型，但我不知道该怎么搭建起来。

我觉得这些都是当前入门教程里没有详细说明的。什么叫详细说明呢？就是不关有原理和插件，还要有具体的例子和具体流程的指导。具体到下一步该用鼠标如何操作。比如我在看教程中，其中有一节就是如何批量修改标签，然后大佬就说了可以借助tw-Commander实现，但我还是没搞明白是如何实现的。这就是编程人士和一般普通大众的区别。我们想让使用太微的人能够开箱即用，那么我以为这些都是要说清楚的。其实篇幅长短不是问题，写得简单易懂才是王道。

我希望这篇指南有两个目的，一个目的就是帮助初学者能够真正做到开箱即用。一个目的就是在于保存有创意的操作。当然我一个人是不可能完成这些内容的，所以我期待有更多的人能够加入进来，特别是像我这种编程小白，一般的使用者能够参加进来。

最后我希望是有一个全面的入门级别，相当于从入门到入土。初级的入门基本已经实现，中级的入门还没有展开，高级的入门指南有望于后来者补充。我个人对于太微的理解，就是放弃了原本的线性结构，也不是简单的双链结构，更解放了notion没有解放的功能。

非线性笔记有什么好处？举一个例子，我在中学学过甲午海战，在大学近代史课程里也学过甲午海战，在自己的阅读书籍里也看到过甲午海战。如果是线性结构的话，那么这三个“甲午海战”的知识就是分别从属于中学历史知识，大学通识课以及个人阅读。但这其实说的是一件事。如果学习能力强的人，肯定能够把这些知识都整合起来，每一次都得到更深入的知识。但我这个人比较懒散，结果就是三次学习，我只记住了中学历史知识中关于甲午海战的描述，其他内容我都说不出来。我的大脑检索不出其他甲午海战的信息。这就好比有很多个条目名称都是甲午海战，但内容不一样。大脑只会选择最简单印象最深刻的条目，也就是中学历史对于甲午海战的描述。这对于学习来说可谓是天大的灾难。读那么多书最后还是什么也说不出来。令人汗颜。以后再阅读了甲午海战的信息，多半还是会被中学历史知识所覆盖。也许甲午海战因为看得内容多了，稍稍记住一点，但其他内容呢？历史知识那么多，难道都靠这种强行输入的方式记忆吗？后期人根本就不想学习了。

而太微就避免了这一点。第一太微会帮助养成做笔记的习惯。第二个太微会建立条目名称，然后避免有重复的。第三，太微能够很快地搜索出来相关的知识。第四，因为是非线性知识，所以能够很轻松运用在其他内容里去。比如上面甲午海战的例子是我在阅读《认知天性》的时候想到的，就是检索路径过多怎么办？这次终于算是解决了。

还有一点，就是我希望能够让太微成为笔记的终点。笔记说到底是文本与文本之间的联系。这一点就要从我的工作流程开始说起。我是先看第一遍书。纸质书和电子书都可以。然后会写一点简单的笔记。然后看需求需不需要重读。如果需要重读的话，那么就会进入到第二个环节，super memo阶段，把书读厚的阶段。这一阶段就是要搞清楚书中每一个内容。让知识拆分到最小信息点，然后不断变换。最后再导出笔记到太微这里。看需求，如果需要一些最小信息点，那么就拆分，暂时不需要的话，也可以先保存。super memo解决的是文本基础内部的联系，简单来说就是搞清楚词义和逻辑，以及书中的案例和结论。而太微则是在搞清楚文本与文本之间的联系。比如尼采和海德格尔之间的联系。海德格尔写过一本专著，名字就叫《尼采》，那么里面体现的思想是尼采还是海德格尔的呢？还是两者兼而有之？（抱歉，因为久不读书，举出来的例子也不是很好，后期再修改掉）文本与文本之间的联系是产生任何伟大作品的前提。而这一点也是由太微来做到的。虽然我只用过notion，飞书，但我以为太微就是笔记软件的终点，也是最强大的笔记软件。

刚入门太微的时候，我是很焦虑的，我当时想的是，今天学习了太微，以后是不是还会有更强大的替代，那么是不是还要学习其他的。我感觉花在学习笔记软件上的时间太多了，目前还可以接受，以后不知道能不能再这样接受下去。现在回想看来，这一个星期以来的努力，绝对物超所值。所以我也乐于分享我使用太微的心得。