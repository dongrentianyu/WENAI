created: 20230211073525105
creator: 马不前
modified: 20230211081914111
modifier: 马不前
tags: 与v先生交流
title: 与v先生交流及答复
tmap.id: f7fc95b8-e524-4cbd-a75b-20e3a5806500
type: text/vnd.tiddlywiki

因为v先生是两条消息，所以我也分别答复。

首先，tiddlywiki内容很多，既使是看教程，有其他人的帮助也需要一周左右才能投入使用。所以学习tiddlywiki不能太着急。而且更重要的是要先用起来。如果一直折腾插件，而不使用基本的，那会是很累的。

外部插件，如果用太记的话，基本上是配置好了的。后面自己要添加的不多。如果每个插件都要详细了解的话，那么学习内容与学习成本会大大增加。感兴趣了解更好，不感兴趣不了解问题也不大。当然有些插件像设拉子插件还是需要看一下教程才能学会使用。

插件与插件之间一般不会有冲突。我印象中有冲突的只在xp教程里看到过。非常少。可能只有少数几个。不过安装插件或者更新插件还是要做好备份工作。

第三点是样式。尽管样式很重要，但我建议新手不要去搞样式，先找一个好看的配色，搭配一个喜欢的主题，就解决了一大半。至于具体部件的样式，在tiddlywiki里基本上就是自己写class或者style了。没有编程基础的人建议先放过或者用xp插件里的mark插件等，更方便。这是css部分，同样属于编程内容，如果深入学习，学习成本和学习内容也会增加。

至于工作流程，这个只能是自己探索，每个人的流程都不太一样。

插件管理目前有cpl，很方便。基本上不需要担心。如果cpl里没有的，要么是早期插件或者不更新的插件，要么是最近开发的。当然也可以去群里反馈，基本上会很快添加过去的。

如何在tiddlywiki里写作，同样是需要自身探索的。因为每个人写作的目的和方式都不一样。有的人喜欢用标签，有的人喜欢用链接。但其实对超文本写作有一定经验的话，并不太难。很快就能找到自己的节奏的。

固然有些细节需要记录与学习，但如果简略一点，并不太难。最基础的学习内容只有三部分，维基语法，筛选器，和插件。维基语法半个小时或者一个小时可以掌握。筛选器简单了解也是一个小时左右。插件花个一天时间了解。我的经验是，不要太折腾，但一定要经常看文档。很多东西别人已经写出来了。

这里有两个额外成本，一个是英语，一个是科学上网。科学上网就不多说。英语则是重点。虽然可以开浏览器的翻译辅助理解，但英语不好学习成本会呈几何式增加。不仅是论坛内容，或者外国人写的文档，基本上都是英文。英文不好真的会要命。

以上是对上半部分消息的答复。

---
对于tiddlywiki为什么不能传播开来，我以为是人们暂时无法接受这种超文本写作。我没用过obsidian，但我觉得tiddlywiki和obsidian最大的区别是，obsidian虽然有引用和链接，但其版式上仍旧是为单篇文章服务的，可以保障出版需要。而tiddlywiki的形式基本上抛弃了出版服务。尽管可以把所有非系统条目导出来，转换成pdf格式，但没人会这样做。

因而，相比markdown语法，我更喜欢维基语法。维基语法里面还可以使用低代码写作。markdown语法好像还做不到。不过各大笔记软件都会对此有补充。有的用大纲形式，有的用数据库形式。各有千秋吧。

集中管理插件的，已经有cpl了，基本上不是问题。如果是要管理本地插件的，可安装xp里的一个PLUGINS插件进行管理。不过其实没有管理的必要。因为可以自己写一系列插件介绍或者插件心得。这样会更好。

桌面端有太记，基本上够用，而且是全平台的。当然官方的tiddly desktop我也在用，偶尔用，一般是测试新东西时使用。手机端就不清楚了。很少用。不过用起来也不错的样子。

官方的增值服务或者发布服务，因为tiddlywiki是开源免费的，所以应该不存在团队来实现这个功能。不过最近论坛上添加了类似付费服务来帮助使用tiddlywiki的。这个也不算是什么问题。但价格嘛，我觉得一般人可能接受不起。除了实在有特殊需求，而编程技术又不够的，我觉得应该很少会有人去选择。

---
我自己是只用过notion和tiddlywiki。也是从林一二知乎那篇文章入门的。不过刚开始用的是手机端，没用下去。后面有了电脑才开始使用。我的经验是，多看文档多提问，这样才会用得更习惯。更快上手。只有多接触才能明白更多。有段时间，我每天上网就是看各种太微站，看别人站点里有什么有意思的功能，看能不能拿过来。反正挺有意思的。

当然自己开发插件或者写代码就没意思了。太累了。我没有编程基础，所以代码放在我面前，我基本上要先翻译一遍，然后再模仿着写。一边写一边看文档。

大概经历了上面两个阶段，配置自己的太微应该不是难事。我觉得一个人花一周时间是可以完全上手太微的。一天三个小时左右，就有21个小时了，完全够的。

最后，还是建议学习编程，或许太微就是编程生涯的起点。当然英语也很重要。
