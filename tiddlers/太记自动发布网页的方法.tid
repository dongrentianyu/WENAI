created: 20230110145524630
creator: 马不前
modified: 20230306041510358
modifier: 马不前
tags: 
title: 太记自动发布网页的方法
tmap.id: 70547413-5fd0-43e1-aad6-d6d9b309c2d9
type: text/vnd.tiddlywiki

首先在本地新建一个wiki。

其次打开文件夹，找到`html-minifier-terser.config.json`文件，重复一份然后把这个文件放到`scripts`文件夹中。千万不要剪切过去，剪切过去会找不到原文件，而无法发布。

然后用github desktop打开。或者直接在太记里右键用可视化git工具打开。

然后提交更新一下。需要先在本地提交过一次，才能把文件传到github上。


<<<
''一定要先在本地提交上面的文件，然后才能创建github仓库，不然会一直报错，后续再添加也没有效果。''
<<<


再次点击旁边的`pulish repository`，就会把当前本地仓库文件推送到github上，并且会新建一个仓库。可以选择为公开还是私密。如果是公开的话，那么平时写的笔记基本上都会更新过去。

理论上可以实现决定什么内容公开什么内容不公开，比如林一二的插件`sub-wiki`。但处理起来不是很方便，我没有太多尝试。我一般的处理方式是，建两个wiki，一个放公开的内容。一个放私密内容。如果我决定某项内容可以公开，那么我就会直接在公开wiki这边写作。

在github仓库里找到setings，再找到actions，点击其中的general，找到Workflow permissions，设置为可读写状态。初始默认是只读版本。因为我们新建wiki，其实是下载太记自带的模板，而太记原本的仓库是只读的。所以需要手动修改一下。

这个时间可能会deploy失败，需要重新reruns all jobs。然后再点击pages下面的部署，选择github actions。

保存成功后，等个几分钟，才会出现网址。然后正常访问就可以了。

这并不是部署网站的唯一方法，也不是最后或者最新的技术。技术会有变化。但目前这种方式算是比较简单的，只需要有github账号就可以实现。

可以支持本地图片，不过需要安装插件$:/plugins/linonetwo/github-external-image（这个插件是太记模板里自带的，如果删除了记得装回来），并在$:/GitHub/Repo里写上仓库名称。